<?php

use Decorator\Pen;
use PHPUnit\Framework\TestCase;

class PenTest extends TestCase
{
    private Pen $pen;
    public const SOMETHING_TO_WRITE = 'foobar';

    public function setUp() : void
    {
        $this->pen = new Pen;
    }

    public function assertPreConditions() : void
    {
        $this->assertEquals(Decorator\Pen::DEFAULT_INK_LEVEL, $this->pen->getInkLevel());
    }

    public function testWriteSomething()
    {
        $this->assertEquals(self::SOMETHING_TO_WRITE, $this->pen->write(self::SOMETHING_TO_WRITE));
    }

    public function testInkLevelIsUsedWhenWriting()
    {
        $this->pen->write(self::SOMETHING_TO_WRITE);
        $this->assertEquals(
           Decorator\Pen::DEFAULT_INK_LEVEL - strlen(self::SOMETHING_TO_WRITE),
           $this->pen->getInkLevel());
    }

    public function testOutOfInk()
    {
        $this->pen->write(str_repeat('a', Decorator\Pen::DEFAULT_INK_LEVEL - 1));
        $this->expectException(\RunTimeException::class);
        $this->expectExceptionMessage('ink');
        $this->pen->write('hurray');
    }
}